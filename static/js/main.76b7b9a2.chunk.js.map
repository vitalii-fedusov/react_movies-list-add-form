{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","pattern","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","hasInvalidError","htmlFor","type","classNames","event","target","onBlur","initialMovieState","NewMovie","onAdd","count","setCount","setMovie","handleInputChange","key","prev","onSubmit","preventDefault","prevValue","test","disabled","trim","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76b7b9a2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  pattern?: boolean,\n  onChange?: (key: string, value: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  pattern = true,\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // eslint-disable-next-line max-len\n  // const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const hasInvalidError = !pattern;\n  // const [urlNotValid, setUrlNotValid] = useState(pattern);\n  // const urlNotValid = pattern && touched;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => {\n            onChange(event.target.name, event.target.value);\n          }}\n          onBlur={() => {\n            setTouched(true);\n            // setUrlNotValid(true);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {hasInvalidError && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nconst initialMovieState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const NewMovie: React.FC<Props> = ({\n  onAdd,\n}) => {\n  const [count, setCount] = useState(0);\n\n  const [movie, setMovie] = useState(initialMovieState);\n\n  const handleInputChange = (key: string, value: string) => {\n    setMovie(prev => ({ ...prev, [key]: value }));\n  };\n\n  const {\n    title, description, imgUrl, imdbUrl, imdbId,\n  } = movie;\n\n  const resetForm = () => {\n    setMovie(initialMovieState);\n  };\n\n  // const [urlIsValid, ]\n\n  const handleDisabled = () => {\n    // if (title.trim()\n    // && imdbId.trim()\n    // && pattern.test(imgUrl)\n    // && pattern.test(imdbUrl)) {\n    //   return false;\n    // }\n    if (title.trim() && imgUrl && imdbId.trim() && imdbUrl) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    // if (title.trim().length < 1) {\n    //   alert('incorrect title');\n\n    //   return;\n    // }\n\n    // if (imdbId.trim().length < 1) {\n    //   alert('incorrect imdbId');\n\n    //   return;\n    // }\n\n    // if (!pattern.test(imgUrl)) {\n    //   alert('incorrect imgUrl');\n\n    //   return;\n    // }\n\n    // if (!pattern.test(imdbUrl)) {\n    //   alert('incorrect imdbUrl');\n\n    //   return;\n    // }\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n    setCount(prevValue => prevValue + 1);\n    resetForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={handleInputChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        required\n        pattern={!imgUrl || pattern.test(imgUrl)}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        required\n        pattern={!imdbUrl || pattern.test(imdbUrl)}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        required\n        onChange={handleInputChange}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={handleDisabled()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}